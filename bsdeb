#!/bin/bash

# exit script immediately on non-zero status
set -e

PROGRAM_NAME="Debian Bootstrapper"
PROGRAM_VERSION="1.0.0-SNAPSHOT"
DEBIAN_VERSION=11.5
CONFIG_FILENAME="server.conf"
REPO_SOURCE_URL="https://github.com/genebarker/deb11base/raw/master"
SCRIPT_FILENAME="$(basename ${BASH_SOURCE})"
BASE_DIR="$(dirname ${BASH_SOURCE})"
RUN_MODE="Show info only"
CONFIG_FILEPATH="${BASE_DIR}/${CONFIG_FILENAME}"

HELP=$(cat << EOF
NAME
    ${SCRIPT_FILENAME} - a Debian server bootstrapper

SYNOPSIS
    ${SCRIPT_FILENAME} [-bh] [-f configfile]

DESCRIPTION
    Bootstrap a new Debian server using a configuration file.

    Given a freshly installed headless Debian ${DEBIAN_VERSION}
    server, this script configures it using the settings found in
    the configuration file.

OPTIONS
    -b              Bootstrap server
    -f configfile   Configuration file, default: ${CONFIG_FILENAME}
    -h              Display this help
EOF
)

display_script_header()
{
    echo "${PROGRAM_NAME} for Debian ${DEBIAN_VERSION}"
    echo "Version ${PROGRAM_VERSION} - MIT License"
    echo
}

has_default_config_file()
{
    echo ".. verifying default config file present"
    if [ -f ${CONFIG_FILEPATH} ]
    then
        echo ".. found default config file (${CONFIG_FILENAME})"
        return 0
    else
        echo ".. no default config file found (${CONFIG_FILENAME})"
        return 1
    fi
}

get_default_config_file()
{
    echo ".. downloading default config file from repo"
    wget ${REPO_SOURCE_URL}/${CONFIG_FILENAME}
    echo ".. config file download successful"
}

override_config_filepath()
{
    local filepath=$1
    if [ -f $1 ]
    then
        CONFIG_FILEPATH=$filepath
    else
        show_error "Config file ($filepath) not found."
        exit 1
    fi
}

show_help()
{
    echo
    echo "${HELP}"
}

show_error()
{
    local message=$1
    echo
    echo "$1 Displaying help."
    show_help
}

display_script_header

if ! has_default_config_file
then
    get_default_config_file
fi

echo ".. parsing script arguments"
while getopts ':bf:h' opt; do
    case "$opt" in
        b)
            RUN_MODE="GO"
            ;;
        f)
            override_config_filepath $OPTARG
            ;;
        h)
            show_help
            exit 0
            ;;
        :)
            show_error "Option requires an argument."
            exit 1
            ;;
        ?)
            show_error "Invalid command option."
            exit 1
            ;;
    esac
done

# remove getopts parms from parameter list
shift $((OPTIND-1))

echo ".. config file set ($CONFIG_FILEPATH)"
echo ".. displaying config"
echo
cat $CONFIG_FILEPATH

if [ "$RUN_MODE" != "GO" ]
then
    echo
    echo "Exiting since bootstrap option not selected."
    exit 0
fi

