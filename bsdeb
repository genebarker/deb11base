#!/bin/bash

# exit script immediately on non-zero status
set -e

PROGRAM_NAME="Debian Bootstrapper"
PROGRAM_VERSION="1.0.0-SNAPSHOT"
DEBIAN_VERSION=11.5
CONFIG_FILENAME="server.conf"
REPO_SOURCE_URL="https://github.com/genebarker/deb11base/raw/master"
SCRIPT_FILENAME="$(basename ${BASH_SOURCE})"
BASE_DIR="$(dirname ${BASH_SOURCE})"
BOOTSTRAP=OFF
CONFIG_FILEPATH="${BASE_DIR}/${CONFIG_FILENAME}"
AUTO_YES=OFF

HELP=$(cat << EOF
NAME
    ${SCRIPT_FILENAME} - a Debian server bootstrapper

SYNOPSIS
    ${SCRIPT_FILENAME} [-bhy] [-f configfile]

DESCRIPTION
    Bootstrap a new Debian server using a configuration file.

    Given a freshly installed headless Debian ${DEBIAN_VERSION}
    server, this script configures it using the settings found in
    the configuration file.

OPTIONS
    -b              Bootstrap server
    -f configfile   Configuration file, default: ${CONFIG_FILENAME}
    -h              Display this help
    -y              Answer yes to confirmation messages
EOF
)

run_main()
{
    display_script_header

    if ! has_default_config_file
    then
        get_default_config_file
    fi

    parse_script_options $@

    if [ $BOOTSTRAP != ON ]
    then
        echo
        echo "Exiting since bootstrap option not used."
        exit 0
    fi

    verify_config_file
    verify_debian_version

    echo ".. upgrading Debian image"
    apt-get update && apt-get -y dist-upgrade

    echo ".. installing vim and setting as default"
    apt-get -y install vim
    update-alternatives --set editor /usr/bin/vim.basic

}

display_script_header()
{
    echo "${PROGRAM_NAME} for Debian ${DEBIAN_VERSION}"
    echo "Version ${PROGRAM_VERSION} - MIT License"
    echo
}

has_default_config_file()
{
    echo ".. verifying default config file present"
    if [ -f ${CONFIG_FILEPATH} ]
    then
        echo ".. found default config file (${CONFIG_FILENAME})"
        return 0
    else
        echo ".. no default config file found (${CONFIG_FILENAME})"
        return 1
    fi
}

get_default_config_file()
{
    echo ".. downloading default config file from repo"
    wget ${REPO_SOURCE_URL}/${CONFIG_FILENAME}
    echo ".. config file download successful"
}

parse_script_options()
{
    echo ".. parsing script options"
    while getopts ':bf:yh' opt
    do
        case "$opt" in
            b)
                BOOTSTRAP=ON
                ;;
            f)
                override_config_filepath $OPTARG
                ;;
            y)
                AUTO_YES=ON
                ;;
            h)
                show_help
                exit 0
                ;;
            :)
                show_error "Option requires an argument."
                exit 1
                ;;
            ?)
                show_error "Invalid command option."
                exit 1
                ;;
        esac
    done

    # remove getopts parms from parameter list
    shift $((OPTIND-1))
}

override_config_filepath()
{
    local filepath=$1
    if [ -f $1 ]
    then
        CONFIG_FILEPATH=$filepath
    else
        show_error "Config file ($filepath) not found."
        exit 1
    fi
}

show_help()
{
    echo
    echo "${HELP}"
}

show_error()
{
    local message=$1
    echo
    echo "ERROR: $1"
}

verify_config_file()
{
    echo ".. config file set ($CONFIG_FILEPATH)"
    echo ".. displaying config"
    echo
    cat $CONFIG_FILEPATH
    question="Is this the correct config to apply (y/n)?"
    ask_continue_question "$question"
}

ask_continue_question()
{
    local question=$1
    echo
    echo -n "$question "
    if [ $AUTO_YES = ON ]
    then
        echo Yes
        return
    fi
    old_stty_cfg=$(stty -g)
    stty raw -echo ; answer=$(head -c 1) ; stty $old_stty_cfg
    if echo "$answer" | grep -iq "^y"
    then
        echo Yes
        return
    else
        echo No
        exit 1
    fi
}

verify_debian_version()
{
    if [ -f /etc/debian_version ]
    then
        version=$(cat /etc/debian_version)
        echo ".. identified version of Debian image ($version)"
    else
        version="UNKNOWN"
    fi
    if [ "$version" != "$DEBIAN_VERSION" ]
    then
        question=$(cat << EOF
WARNING: The version of this Debian image ($version) does NOT match
the script target ($DEBIAN_VERSION).

Do you still want to bootstrap this image (y/n)?
EOF
        )
        ask_continue_question "$question"
        echo
    fi
}

run_main $@
